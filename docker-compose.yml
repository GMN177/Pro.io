version: "3.8"
services:
    mongodb:
        container_name: 'MongoDb'
        image: 'mongo:4.4.18'
        ports:
            - 27017:27017
        volumes: 
            - '${HOME}/data:/data/db'
        restart: unless-stopped
    rabbitmq:
        container_name: 'RabbitMQ'
        image: rabbitmq:alpine
        ports:
            - 5672:5672
            - 15672:15672
        restart: unless-stopped
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 10s
            retries: 3
    logaggregatorservice:
        container_name: 'LogAggregatorService'
        env_file: .env
        build:
            context: ./packages/backEnd/logAggregatorService
        restart: unless-stopped
        depends_on:
            rabbitmq:
                condition: service_healthy
        command: "npm run start"
    userservice:
        container_name: 'UserService'
        env_file: .env
        build:
            context: ./packages/backEnd/userService
        ports:
            - "4001:4000"
        restart: unless-stopped
        depends_on:
            - mongodb
            - logaggregatorservice
        command: "npm run start"
    matchservice:
        container_name: 'MatchService'
        env_file: .env
        build:
            context: ./packages/backEnd/matchService
        ports:
            - "4002:4000"
        restart: unless-stopped
        depends_on:
            - mongodb
            - logaggregatorservice
        command: "npm run start"
    gameservice:
        container_name: 'GameService'
        env_file: .env
        build:
            context: ./packages/backEnd/gameService
        ports:
            - "4003:4000"
        restart: unless-stopped
        depends_on:
            - mongodb
            - logaggregatorservice
        command: "npm run start"
    tictactoeservice:
        container_name: 'TicTacToeService'
        env_file: .env
        build:
            context: ./packages/backEnd/ticTacToeService
        ports:
            - "4004:4000"
        restart: unless-stopped
        depends_on:
            - userservice
            - matchservice
            - gameservice
        command: "npm run start"
    whogetsfirstservice:
        container_name: 'WhoGetsFirstService'
        env_file: .env
        build:
            context: ./packages/backEnd/whoGetsFirstService
        ports:
            - "4004:4000"
        restart: unless-stopped
        depends_on:
            - userservice
            - matchservice
            - gameservice
        command: "npm run start"
    chatservice:
        container_name: 'ChatService'
        env_file: .env
        build:
            context: ./packages/backEnd/chatService
        ports:
            - "4005:4000"
        restart: unless-stopped
        depends_on:
            - userservice
            - matchservice
            - gameservice
        command: "npm run start"
    frontend:
        container_name: 'Frontend'
        build:
            context: ./packages/frontend
        ports:
            - "3000:3000"
        restart: unless-stopped
    nginx:
        container_name: 'nginx'
        build:
            context: ./packages/backEnd/nginx
        volumes:
            - "./packages/backEnd/nginx:/www/data"
        ports:
            - "80:80"
        restart: unless-stopped
        depends_on:
            - userservice
            - matchservice
            - gameservice
            - tictactoeservice
            - whogetsfirstservice
            - chatservice
            - frontend