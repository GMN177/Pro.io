name: Deploy to Raspberry Pi

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      DB_URI: ${{ secrets.DB_URI }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # outputs:
    #  tag_name: ${{ steps.set_tag_name.outputs.tag_name }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Set TAG_NAME
      #   id: set_tag_name
        #  run: echo ${{ secrets.SERVER_PORT }}

      - name: Create a docker image
        env:
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          DB_URI: ${{ secrets.DB_URI }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
        run: echo $SERVER_PORT
          #  docker build -t rpi-cd-tutorial:${{ steps.set_tag_name.outputs.tag_name }} .
  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Kill all running containers
        run: docker-compose down

      - name: Run the docker image
        run: docker-compose up
